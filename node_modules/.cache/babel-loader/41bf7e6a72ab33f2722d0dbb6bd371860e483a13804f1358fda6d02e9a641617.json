{"ast":null,"code":"var _jsxFileName = \"/Users/imchaehee/ReactProject/todo-list/src/components/TodoCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 10000px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n\n  transition: 0.125s all ease-in;\n  ${props => props.open && css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n_c = CircleButton;\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n_c2 = InsertFormPositioner;\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n_c3 = InsertForm;\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n_c4 = Input;\nfunction TodoCreate() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n  const onToggle = () => setOpen(!open);\n  const onChange = e => setValue(e.target.value);\n  const onSubmit = e => {\n    e.preventDefault(); // 새로고침 방지\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [open && /*#__PURE__*/_jsxDEV(InsertFormPositioner, {\n      children: /*#__PURE__*/_jsxDEV(InsertForm, {\n        onSubmit: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          autoFocus: true,\n          placeholder: \"\\uD560 \\uC77C\\uC744 \\uC785\\uB825 \\uD6C4, Enter \\uB97C \\uB204\\uB974\\uC138\\uC694\",\n          onChange: onChange,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CircleButton, {\n      onClick: onToggle,\n      open: open,\n      children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TodoCreate, \"8hzxYQT0Xn4ApTkUNSD4/y9gAp8=\", false, function () {\n  return [useTodoDispatch, useTodoNextId];\n});\n_c5 = TodoCreate;\nexport default _c6 = /*#__PURE__*/React.memo(TodoCreate);\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CircleButton\");\n$RefreshReg$(_c2, \"InsertFormPositioner\");\n$RefreshReg$(_c3, \"InsertForm\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"TodoCreate\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"names":["React","useState","styled","css","MdAdd","useTodoDispatch","useTodoNextId","jsxDEV","_jsxDEV","Fragment","_Fragment","CircleButton","button","props","open","_c","InsertFormPositioner","div","_c2","InsertForm","form","_c3","Input","input","_c4","TodoCreate","_s","setOpen","value","setValue","dispatch","nextId","onToggle","onChange","e","target","onSubmit","preventDefault","type","todo","id","current","text","done","children","autoFocus","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c5","_c6","memo","$RefreshReg$"],"sources":["/Users/imchaehee/ReactProject/todo-list/src/components/TodoCreate.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  align-items: center;\n  justify-content: center;\n  font-size: 60px;\n  position: absolute;\n  left: 50%;\n  bottom: 10000px;\n  transform: translate(-50%, 50%);\n  color: white;\n  border-radius: 50%;\n  border: none;\n  outline: none;\n\n\n  transition: 0.125s all ease-in;\n  ${props =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding-left: 32px;\n  padding-top: 32px;\n  padding-right: 32px;\n  padding-bottom: 72px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = e => setValue(e.target.value);\n  const onSubmit = e => {\n    e.preventDefault(); // 새로고침 방지\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false\n      }\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              autoFocus\n              placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\n              onChange={onChange}\n              value={value}\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}